:root {
    min-height: 100vh;
    min-height: 100svh;
    min-width: 100vw;
    min-width: 100svw;
    --primary-color: #0d9488;
    --secondary-color: #00C9B4;
    --dark-primary-color: #8E518D;
    --dark-secondary-color: #C86FC9;
    --light-theme: #ffffff;
    --dark-theme: #111827;
    --tw-gradient-from: #06b6d4;
    --tw-gradient-from: #14b8a6;
    --tw-gradient-to: rgb(20 184 166 / 0);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
    --font-regular: Roboto;
    --font-bold: Roboto-Bold;
    --font-italic: Roboto-Italic;
    --font-light: Roboto-Light;
}

body {
    min-height: 100vh;
    min-height: 100svh;
    min-width: 100vw;
    min-width: 100svw;
}

nav {
    display: flex;
    justify-content: space-around;
    align-items: center;
    /* margin: 1em 7em; */
}

.nav-right {
    display: flex;
    align-items: center;
    gap: 5em;
}

.nav-projects {
    align-items: center;
    gap: 1em;
}

.nav-projects > li {
    list-style-type: none;
}

.nav-projects > li > ol {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1em;
    padding: 0;
}

.nav-projects > li > ol > a {
    text-decoration: none;
    color: inherit;
}

.theme-btn {
    width: 2em;
    height: 2em;
    cursor: pointer;
}

html, body {
    margin: 0;
    font-family: var(--font-regular);
    letter-spacing: 2px;
}

header {
    height: 110vh;
}

h1 {
    color: var(--primary-color);
    font-size: 4em;
    font-family: var(--font-bold);
}

nav > h2 {
    font-size: 1.5em;
}

h2 {
    font-family: var(--font-bold);
    font-size: 2rem;
    text-align: center;
}

h2.center-item {
    font-size: 1.7rem;
}

p {
    font-size: 2rem;
}

.card-info > p {
    font-size: 1.5rem;
}

.centering {
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 2rem;
}

.center-item {
    margin: .1em auto;
}

.cover-photo {
    border-radius: 20px;
    margin: 3em auto 1em;
    width: 25em;
    background-image: linear-gradient(to bottom, var(--tw-gradient-stops));
}

.cover-photo:hover {
    animation: photo;
    animation-duration: 4s;
    animation-fill-mode: forwards;
}

@keyframes photo {
    from {border-radius: 20px;}
    to {border-radius: 9999px;}
}

.utvikle {
    position: relative;
    opacity: 0.8;
    min-height: 70vh;
    background-image: url(../public/coding.jpg);
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
    background-attachment: fixed;
}

.card {
    height: 10rem;
    width: 25rem;
    margin: 2em auto;
    padding: 2em;
    display: flex;
    justify-content: space-around;
    align-items: center;
    text-align: center;
    letter-spacing: 1px;
    color: #2b2839;
    border-radius: 1rem;
    background: rgb(58,97,180);
    background: -moz-linear-gradient(90deg, rgba(58,97,180,1) 0%, rgba(29,184,253,1) 31%, rgba(69,252,222,1) 100%);
    background: -webkit-linear-gradient(90deg, rgba(58,97,180,1) 0%, rgba(29,184,253,1) 31%, rgba(69,252,222,1) 100%);
    background: linear-gradient(90deg, rgba(58,97,180,1) 0%, rgba(29,184,253,1) 31%, rgba(69,252,222,1) 100%);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#3a61b4",endColorstr="#45fcde",GradientType=1);
}

.card:hover {
    box-shadow: .1em .1em .5em 0;
    animation: anim;
    animation-duration: .1s;
    animation-fill-mode: forwards;
}

@keyframes anim {
    from {transform: scale(1.0);}
    to {transform: scale(1.05);}
}

.avatar {
    width: 150px;
    border-radius: 5em;
}

.app-theme-light {
    background-color: var(--light-theme);
    color: var(--dark-theme)
}

.app-theme-dark {
    background-color: var(--dark-theme);
    color: var(--light-theme)
}

@font-face {
    font-family: Roboto;
    src: url(../fonts/RobotoCondensed-Regular.ttf);
}

@font-face {
    font-family: Roboto-Bold;
    src: url(../fonts/RobotoCondensed-Bold.ttf);
}

@font-face {
    font-family: Roboto-Italic;
    src: url(../fonts/RobotoCondensed-Italic.ttf);
}

@font-face {
    font-family: Roboto-Light;
    src: url(../fonts/RobotoCondensed-Light.ttf);
}

/* @media screen and (max-width: 768px) {
    header {
        min-height: 110vh;
    }
} */

@media screen and (max-width: 426px) and (orientation: portrait) {
    :root {
        /* margin: 0; */
        /* background-color: green; */
    }

    body {
        letter-spacing: 1px;
        /* background-color: red; */
    }


    nav {
        justify-content:space-around;
        background-color: #00C9B4;
        padding: 0 1rem;
    }

    nav > h2 {
        display: flex;
        font-size: 2rem;
        color: var(--light-theme);
        text-shadow: 0 0 .2em black;
    }

    .nav-projects {
        list-style-type: none;
    }

    a {
        text-decoration: none;
    }

    .nav-right {
        gap: 1rem;
    }

    .centering {
        gap: 1.5rem;
    }

    header {
        height: 100vh;
    }

    h1 {
        color: var(--primary-color);
        font-size: 4em;
        font-family: var(--font-bold);
    }

    h2 {
        font-family: var(--font-bold);
        font-size: 2rem;
        text-align: center;
    }

    p {
        font-size: 1.5rem;
    }

    .card-info > p {
        font-size: 1rem;
    }

    .cover-photo {
        width: 20em;
    }

    .utvikle {
        min-height: 30vh;
    }

    .card {
        width: 20rem;
        padding: 1rem;
    }

    .avatar {
        width: 8rem;
        border-radius: 5em;
    }
}

@media screen and (max-width: 375px) and (orientation: portrait) {
    nav > h2 {
        font-size: 1.8rem;
    }
}

@media screen and (max-width: 320px) and (orientation: portrait) {
    nav > h2 {
        font-size: 1.5rem;
    }

    .cover-photo {
        width: 18em;
    }

    h1 {
        font-size: 3rem;
    }

    h2.center-item {
        font-size: 1.5rem;
    }

    p {
        font-size: 1.1rem;
    }

    .card {
        height: 7rem;
        width: 15rem;
        padding: 1.5rem 1.5rem;
    }

    .avatar {
        width: 7rem;
        border-radius: 5em;
    }

    .card-info {
        padding: 5rem auto;
        font-size: .8rem;
    }

    .card-info > p {
        font-size: 1rem;
    }
}

@media screen and (max-height: 426px) and (orientation: landscape) {
    :root {
        /* margin: 0; */
        /* background-color: green; */
    }

    body {
        letter-spacing: 1px;
        /* background-color: red; */
    }


    nav {
        justify-content:space-around;
        background-color: #00C9B4;
        padding: 0 1rem;
    }

    nav > h2 {
        display: flex;
        font-size: 1.5rem;
        color: var(--light-theme);
        text-shadow: 0 0 .2em black;
    }

    .nav-projects {
        list-style-type: none;
    }

    a {
        text-decoration: none;
    }

    .nav-right {
        gap: 1rem;
    }

    header {
        min-height: 100vh;
    }

    .cover {
        flex-direction: column;
    }

    h1 {
        color: var(--primary-color);
        font-size: 4em;
        font-family: var(--font-bold);
    }

    h2 {
        font-family: var(--font-bold);
        font-size: 2rem;
        text-align: center;
    }

    p {
        font-size: 1.2rem;
    }

    .card-info > p {
        font-size: 1rem;
    }

    .cover-photo {
        width: 10em;
    }

    .cover {
        flex-direction: row;
        justify-content: space-between;
        margin: 1rem 5rem;
        gap: 3rem;
        align-items: center;
        flex-wrap: wrap;
    }

    .utvikle {
        min-height: 80vh;
    }

    .card {
        width: 20rem;
        padding: 1rem;
    }

    .avatar {
        width: 8rem;
        border-radius: 5em;
    }
}

@media screen and (max-height: 375px) and (orientation: landscape) {
    header {
        min-height: 120vh;
    }
}

@media screen and (max-height: 320px) and (orientation: landscape) {
    header {
        min-height: 150vh;
    }
}

/* Use rems instead of pixels, add reusable breakpoints, somewhere around 4, and use them around your site for consistency.
When you see that a certain page/section is broken at a specific size, write a breakpoint that fixes that problem specifically. */